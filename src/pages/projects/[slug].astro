---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Intro from '../../components/Intro.astro';
import Button from '../../components/Button.astro';

export const getStaticPaths = async () => {
    const projects = await getCollection('projects');
    const paths = projects.map(project => {
        return {
            params: {
                slug: project.slug
            },
            props: {
                project
            }
        }
    })
    return paths;
}

type Props = {
    project: CollectionEntry<'projects'>
}

const {project} = Astro.props;
const {Content} = await project.render();
---

<Layout title='Pvngu | MyStoreSystem'>
    <Intro />
    <main class="pt-20">
        <section class="px-[10%] max-md:px-4">
            <div class="flex max-lg:flex-col max-lg:gap-y-3 justify-between mb-8">
                <div class="flex flex-col lg:max-w-[60%]">
                    <div class="mb-5">
                        <h1 class='font-main font-bold uppercase text-black-gray whitespace-nowrap'>{project.data.title}</h1>
                    </div>
                    <div>
                        <p class="text-justify">{project.data.description}</p>
                    </div>
                </div>
                <div class="flex justify-between text-black-gray">
                    <div class="flex flex-col justify-end lg:gap-y-6 gap-y-2">
                        <div id="right-items" class="flex gap-x-6 lg:justify-end">
                            <div>
                                <div class="font-bold">Date:</div>
                                <div>{project.data.date}</div>
                            </div>
                            <div>
                                <div class="font-semibold">Technologies:</div>
                                <div class="tech">
                                    {
                                        project.data.tech?.map(t => (
                                            <i class=`bx bxl-${t}`></i>
                                        ))
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="flex gap-x-4 lg:justify-end">
                            {
                                project.data.previewLink && (
                                    <Button link={project.data.previewLink} invertColor={true}>
                                        <i class='bx bx-show text-3xl'></i>View Project
                                    </Button>
                                )
                            }
                            {
                                project.data.sourceLink && (
                                    <Button link={project.data.sourceLink}>
                                        <i class='bx bxl-github' ></i> View Source Code
                                    </Button>
                                )
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="markdown flex flex-col gap-y-8">
                <Content />
            </div>
        </section>
    </main>
</Layout>

<style is:inline>
    h1 {
        font-size: clamp(30px, 5vw, 70px);
    }

    .tech i{
        font-size: clamp(25px, 2.7vw, 50px);
    }

    #right-items, p {
        font-size: clamp(16px, 1.2vw, 23px);
    }

    .markdown p img {
        border-radius: 1.5rem;
        margin: 0 auto;
    }

    .markdown h2 {
        font-size: clamp(22px, 3vw, 40px);
        font-family: Poppins, sans-serif;
        font-weight: 700;
        text-align: center;
        color: #222222;
    }

    .bx {
        font-size: clamp(10px, 2.6vw, 40px);
    }
</style>