---
interface Props {
    link: string,
    invertColor?: boolean
}

const { link, invertColor } = Astro.props;

const btnStyle = invertColor ? 'inverted' : 'btn';
---

<a class={btnStyle} target="_blank" href={link}>
    <slot />
</a>

<style>
    .btn {
    display: flex;
    align-items: center;
    column-gap: .3rem;
    color: #222222;
    text-transform: uppercase;
    text-decoration: none;
    border: 2px solid #222222;
    padding: 3% 7%;
    font-size: clamp(8px, 1vw, 17px);
    font-weight: bold;
    background: transparent;
    position: relative;
    transition: all 1s;
    overflow: hidden;
    cursor: pointer;
    white-space: nowrap;
    }

    .btn:hover {
    color: #f2f2f2;
    }

    .btn::before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    top: 0;
    left: -40px;
    transform: skewX(45deg);
    background-color: #222222;
    z-index: -1;
    transition: all 1s;
    }

    .btn:hover::before {
    width: 160%;
    }

    .inverted {
    display: flex;
    align-items: center;
    column-gap: .3rem;
    color: #f2f2f2;
    text-transform: uppercase;
    text-decoration: none;
    border: 2px solid #222222;
    padding: 3% 7%;
    font-size: clamp(8px, 1vw, 17px);
    font-weight: bold;
    background: transparent;
    position: relative;
    transition: all 1s;
    overflow: hidden;
    cursor: pointer;
    white-space: nowrap;
    }

    .inverted:hover {
    color: #222222;
    }

    .inverted::before {
    content: '';
    position: absolute;
    height: 100%;
    width: 160%;
    top: 0;
    left: -40px;
    transform: skewX(45deg);
    background-color: #222222;
    z-index: -1;
    transition: all 1s;
    }

    .inverted:hover::before {
    width: 0%;
    }
</style>