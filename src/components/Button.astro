---
interface Props {
    link: string,
    invertColor?: boolean
}

const { link, invertColor } = Astro.props;

const btnStyle = invertColor ? 'inverted' : 'btn';
---

<a class=`${btnStyle} xl:text-sm px-3 py-2 lg:text-[0.7rem] text-xs` target="_blank" href={link}>
    <slot />
</a>

<style>
    .btn, .inverted {
        display: flex;
        align-items: center;
        column-gap: .3rem;
        color: #222222;
        text-transform: uppercase;
        text-decoration: none;
        border: 2px solid #222222;
        font-weight: bold;
        background: transparent;
        position: relative;
        transition: color 1s;
        overflow: hidden;
        white-space: nowrap;
    }

    .inverted {
        color: #f2f2f2;
    }

    .btn:hover {
        color: #f2f2f2;
    }

    .inverted:hover {
        color: #222222;
    }

    .btn::before, .inverted::before {
        content: '';
        position: absolute;
        height: 100%;
        width: 0%;
        top: 0;
        left: -40px;
        transform: skewX(45deg);
        background-color: #222222;
        z-index: -1;
        transition: width 1s;
    }

    .inverted::before {
        width: 160%;
    }

    .btn:hover::before {
        width: 160%;
    }

    .inverted:hover::before {
        width: 0%;
    }
</style>